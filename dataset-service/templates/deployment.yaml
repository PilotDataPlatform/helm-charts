apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dataset-service.fullname" . }}
  labels:
    {{- include "dataset-service.labels" . | nindent 4 }}
  {{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
    {{- if .Values.updateStrategy }}
  strategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "dataset-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "dataset-service.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: "init{{ .Values.name }}"
          image: "{{ .Values.image.repository }}:alembic-{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.initCommand }}
          {{- with .Values.initCommand }}
          command: 
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- if .Values.initArgs }}
          {{- with .Values.initArgs }}
          args: 
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          env:
          - name: port
            value: {{ .Values.appConfig.port | quote }}
          - name: CONFIG_CENTER_ENABLED
            value: {{ .Values.appConfig.config_center_enabled | quote }}
          - name: CONFIG_CENTER_BASE_URL
            value: {{ .Values.appConfig.config_center_base_url | quote }}
          - name: env
            value: {{ .Values.appConfig.env | quote }}
          - name: srv_namespace
            value: {{ .Values.appConfig.srv_namespace | quote }}
          # telemetry
          - name: OPEN_TELEMETRY_ENABLED
            value: {{ .Values.appConfig.OPEN_TELEMETRY_ENABLED | quote }}
          #dataset
          - name: DATASET_FILE_FOLDER
            value: {{ .Values.appConfig.DATASET_FILE_FOLDER }}
          - name: DATASET_SCHEMA_FOLDER
            value: {{ .Values.appConfig.DATASET_SCHEMA_FOLDER }}
          - name: DATASET_CODE_REGEX
            value: {{ .Values.appConfig.DATASET_CODE_REGEX }}
          #greenroom
          - name: ROOT_PATH
            value: "/data/core-storage"
          - name: CORE_ZONE_LABEL
            value: "Core"
          - name: GREEN_ZONE_LABEL
            value: "Greenroom"
{{- if not .Values.appConfig.tenant_id }}
          - name: MINIO_OPENID_CLIENT
            value: "react-app"
          - name: MINIO_ENDPOINT
            value: "minio.minio:9000"
          - name: MINIO_HTTPS
            value: "False"
          - name: S3_GATEWAY 
            value: "True"
{{- end }}
          #keycloak
          - name: KEYCLOAK_URL
            value: {{ .Values.appConfig.KEYCLOAK_URL | quote }}
          #if tenant id is not set
{{- if not .Values.appConfig.tenant_id }}
          - name: NEO4J_SERVICE
            value: "http://neo4j.utility:5062"
          - name: QUEUE_SERVICE
            value: "http://queue-producer.greenroom:6060"
          - name: CATALOGUING_SERVICE
            value: "http://lineage.utility:5064"
          - name: ENTITYINFO_SERVICE
            value: "http://entityinfo.utility:5066"
          - name: METADATA_SERVICE
            value: "http://metadata.utility:5065"
          - name: PROJECT_SERVICE
            value: "http://project.utility:5065"
          - name: ELASTIC_SEARCH_SERVICE
            value: "http://elasticsearch-master.utility:9200"
          - name: KAFKA_URL
            value: "kafka-headless:9092"
          - name: UTILITY_SERVICE
            value: "http://common.utility:5062"
          - name: gm_queue_endpoint
            value: "message-bus-greenroom.greenroom"
          - name: DATA_OPS_UTIL
            value: "http://dataops.utility:5063"
          - name: SEND_MESSAGE_URL
            value: "http://queue-producer.greenroom:6060"
{{- else }}
          - name: NEO4J_SERVICE
            value: "http://notification.{{ .Values.appConfig.tenant_id }}-utility:5065"
           - name: NEO4J_SERVICE
            value: "http://neo4j.{{ .Values.appConfig.tenant_id }}-utility:5062"
          - name: QUEUE_SERVICE
            value: "http://queue-producer.{{ .Values.appConfig.tenant_id }}-greenroom:6060"
          - name: CATALOGUING_SERVICE
            value: "http://lineage.{{ .Values.appConfig.tenant_id }}-utility:5064"
          - name: ENTITYINFO_SERVICE
            value: "http://entityinfo.{{ .Values.appConfig.tenant_id }}-utility:5066"
          - name: METADATA_SERVICE
            value: "http://metadata.{{ .Values.appConfig.tenant_id }}-utility:5065"
          - name: PROJECT_SERVICE
            value: "http://project.{{ .Values.appConfig.tenant_id }}-utility:5065"
          - name: ELASTIC_SEARCH_SERVICE
            value: "http://elasticsearch-master.{{ .Values.appConfig.tenant_id }}-utility:9200"
          - name: KAFKA_URL
            value: "kafka-headless.{{ .Values.appConfig.tenant_id }}-:9092"
          - name: UTILITY_SERVICE
            value: "http://common.{{ .Values.appConfig.tenant_id }}-utility:5062"
          - name: gm_queue_endpoint
            value: "message-bus-greenroom.{{ .Values.appConfig.tenant_id }}-greenroom"
          - name: DATA_OPS_UTIL
            value: "http://dataops.{{ .Values.appConfig.tenant_id }}-utility:5063"
          - name: SEND_MESSAGE_URL
            value: "http://queue-producer.{{ .Values.appConfig.tenant_id }}-greenroom:6060"
{{- end}}
          # Relational Database 
{{- if not .Values.appConfig.tenant_id }}
          - name: OPSDB_UTILITY_HOST
            value: {{ .Values.appConfig.OPSDB_UTILITY_HOST | quote }}
{{- else }}
          - name: OPSDB_UTILITY_HOST
            value: "postgres.{{ .Values.appConfig.tenant_id }}-utility"
{{- end}}
          - name: OPSDB_UTILITY_PORT
            value: {{ .Values.appConfig.OPSDB_UTILITY_PORT | quote }}
          - name: OPSDB_UTILITY_USERNAME
            value: {{ .Values.appConfig.OPSDB_UTILITY_USERNAME | quote }}
          - name: RDS_DBNAME
            value: {{ .Values.appConfig.RDS_DBNAME | quote }}
          # redis
{{- if not .Values.appConfig.tenant_id }}
          - name: REDIS_HOST
            value: {{ .Values.appConfig.REDIS_HOST | quote }}
{{- else }}
          - name: REDIS_HOST
            value: "redis-master.{{ .Values.appConfig.tenant_id }}-redis"
{{- end }}
          - name: REDIS_PORT
            value: {{ .Values.appConfig.REDIS_PORT | quote }}
          - name: REDIS_DB
            value: {{ .Values.appConfig.REDIS_DB | quote }}
          - name: RUN_MIGRATIONS_ON_BUILD
            value: {{ .Values.appConfig.RUN_MIGRATIONS_ON_BUILD | quote }}
          - name: DOWNLOAD_TOKEN_EXPIRE_AT
            value: {{ .Values.appConfig.DOWNLOAD_TOKEN_EXPIRE_AT | quote }}
          - name: MAX_PREVIEW_SIZE
            value: {{ .Values.appConfig.MAX_PREVIEW_SIZE | quote }}
          - name: ESSENTIALS_NAME
            value: {{ .Values.appConfig.ESSENTIALS_NAME | quote }}
          - name: ESSENTIALS_TPL_NAME
            value: {{ .Values.appConfig.ESSENTIALS_TPL_NAME | quote }}
          - name: ALEMBIC_CONFIG
            value: {{ .Values.appConfig.ALEMBIC_CONFIG | quote }}
{{- if .Values.extraEnv }}
  {{- range $key, $value := .Values.extraEnv }}
          - name: {{ $key }}
            value: {{ $value | quote }}
  {{- end }}
{{- end }}
{{- if .Values.envSecrets }}
  {{- range $key, $secret :=  .Values.envSecrets }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ $secret }}
                key: {{ $key | quote }}
  {{- end }}
{{- end }}
{{- with .Values.extraEnvYaml }}
          {{- toYaml . | nindent 10 }}
{{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:dataset-{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.command }}
          {{- with .Values.command }}
          command: 
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- if .Values.args }}
          {{- with .Values.args }}
          args: 
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          env:
          - name: port
            value: {{ .Values.appConfig.port | quote }}
          - name: CONFIG_CENTER_ENABLED
            value: {{ .Values.appConfig.config_center_enabled | quote }}
          - name: CONFIG_CENTER_BASE_URL
            value: {{ .Values.appConfig.config_center_base_url | quote }}
          - name: env
            value: {{ .Values.appConfig.env | quote }}
          - name: srv_namespace
            value: {{ .Values.appConfig.srv_namespace | quote }}
          # telemetry
          - name: OPEN_TELEMETRY_ENABLED
            value: {{ .Values.appConfig.OPEN_TELEMETRY_ENABLED | quote }}
          #dataset
          - name: DATASET_FILE_FOLDER
            value: {{ .Values.appConfig.DATASET_FILE_FOLDER }}
          - name: DATASET_SCHEMA_FOLDER
            value: {{ .Values.appConfig.DATASET_SCHEMA_FOLDER }}
          - name: DATASET_CODE_REGEX
            value: {{ .Values.appConfig.DATASET_CODE_REGEX }}
          #greenroom
          - name: ROOT_PATH
            value: "/data/core-storage"
          - name: CORE_ZONE_LABEL
            value: "Core"
          - name: GREEN_ZONE_LABEL
            value: "Greenroom"
{{- if not .Values.appConfig.tenant_id }}
          - name: MINIO_OPENID_CLIENT
            value: "react-app"
          - name: MINIO_ENDPOINT
            value: "minio.minio:9000"
          - name: MINIO_HTTPS
            value: "False"
          - name: S3_GATEWAY 
            value: "True"
{{- end }}
          #keycloak
          - name: KEYCLOAK_URL
            value: {{ .Values.appConfig.KEYCLOAK_URL | quote }}
          #if tenant id is not set
{{- if not .Values.appConfig.tenant_id }}
          - name: NEO4J_SERVICE
            value: "http://neo4j.utility:5062"
          - name: QUEUE_SERVICE
            value: "http://queue-producer.greenroom:6060"
          - name: CATALOGUING_SERVICE
            value: "http://lineage.utility:5064"
          - name: ENTITYINFO_SERVICE
            value: "http://entityinfo.utility:5066"
          - name: METADATA_SERVICE
            value: "http://metadata.utility:5065"
          - name: PROJECT_SERVICE
            value: "http://project.utility:5065"
          - name: ELASTIC_SEARCH_SERVICE
            value: "http://elasticsearch-master.utility:9200"
          - name: KAFKA_URL
            value: "kafka-headless:9092"
          - name: UTILITY_SERVICE
            value: "http://common.utility:5062"
          - name: gm_queue_endpoint
            value: "message-bus-greenroom.greenroom"
          - name: DATA_OPS_UTIL
            value: "http://dataops.utility:5063"
          - name: SEND_MESSAGE_URL
            value: "http://queue-producer.greenroom:6060"
{{- else }}
          - name: NEO4J_SERVICE
            value: "http://notification.{{ .Values.appConfig.tenant_id }}-utility:5065"
           - name: NEO4J_SERVICE
            value: "http://neo4j.{{ .Values.appConfig.tenant_id }}-utility:5062"
          - name: QUEUE_SERVICE
            value: "http://queue-producer.{{ .Values.appConfig.tenant_id }}-greenroom:6060"
          - name: CATALOGUING_SERVICE
            value: "http://lineage.{{ .Values.appConfig.tenant_id }}-utility:5064"
          - name: ENTITYINFO_SERVICE
            value: "http://entityinfo.{{ .Values.appConfig.tenant_id }}-utility:5066"
          - name: METADATA_SERVICE
            value: "http://metadata.{{ .Values.appConfig.tenant_id }}-utility:5065"
          - name: PROJECT_SERVICE
            value: "http://project.{{ .Values.appConfig.tenant_id }}-utility:5065"
          - name: ELASTIC_SEARCH_SERVICE
            value: "http://elasticsearch-master.{{ .Values.appConfig.tenant_id }}-utility:9200"
          - name: KAFKA_URL
            value: "kafka-headless.{{ .Values.appConfig.tenant_id }}-:9092"
          - name: UTILITY_SERVICE
            value: "http://common.{{ .Values.appConfig.tenant_id }}-utility:5062"
          - name: gm_queue_endpoint
            value: "message-bus-greenroom.{{ .Values.appConfig.tenant_id }}-greenroom"
          - name: DATA_OPS_UTIL
            value: "http://dataops.{{ .Values.appConfig.tenant_id }}-utility:5063"
          - name: SEND_MESSAGE_URL
            value: "http://queue-producer.{{ .Values.appConfig.tenant_id }}-greenroom:6060"
{{- end}}
          # Relational Database 
{{- if not .Values.appConfig.tenant_id }}
          - name: OPSDB_UTILITY_HOST
            value: {{ .Values.appConfig.OPSDB_UTILITY_HOST | quote }}
{{- else }}
          - name: OPSDB_UTILITY_HOST
            value: "postgres.{{ .Values.appConfig.tenant_id }}-utility"
{{- end}}
          - name: OPSDB_UTILITY_PORT
            value: {{ .Values.appConfig.OPSDB_UTILITY_PORT | quote }}
          - name: OPSDB_UTILITY_USERNAME
            value: {{ .Values.appConfig.OPSDB_UTILITY_USERNAME | quote }}
          - name: RDS_DBNAME
            value: {{ .Values.appConfig.RDS_DBNAME | quote }}
          # redis
{{- if not .Values.appConfig.tenant_id }}
          - name: REDIS_HOST
            value: {{ .Values.appConfig.REDIS_HOST | quote }}
{{- else }}
          - name: REDIS_HOST
            value: "redis-master.{{ .Values.appConfig.tenant_id }}-redis"
{{- end }}
          - name: REDIS_PORT
            value: {{ .Values.appConfig.REDIS_PORT | quote }}
          - name: REDIS_DB
            value: {{ .Values.appConfig.REDIS_DB | quote }}
          - name: RUN_MIGRATIONS_ON_BUILD
            value: {{ .Values.appConfig.RUN_MIGRATIONS_ON_BUILD | quote }}
          - name: DOWNLOAD_TOKEN_EXPIRE_AT
            value: {{ .Values.appConfig.DOWNLOAD_TOKEN_EXPIRE_AT | quote }}
          - name: MAX_PREVIEW_SIZE
            value: {{ .Values.appConfig.MAX_PREVIEW_SIZE | quote }}
          - name: ESSENTIALS_NAME
            value: {{ .Values.appConfig.ESSENTIALS_NAME | quote }}
          - name: ESSENTIALS_TPL_NAME
            value: {{ .Values.appConfig.ESSENTIALS_TPL_NAME | quote }}
          - name: ALEMBIC_CONFIG
            value: {{ .Values.appConfig.ALEMBIC_CONFIG | quote }}
{{- if .Values.extraEnv }}
  {{- range $key, $value := .Values.extraEnv }}
          - name: {{ $key }}
            value: {{ $value | quote }}
  {{- end }}
{{- end }}
{{- with .Values.extraEnvYaml }}
          {{- toYaml . | nindent 10 }}
{{- end }}
          ports:
              - name: http
                containerPort: {{ .Values.container.port }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.extraVolumeMounts }}
          volumeMounts:
            {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.extraVolumes }}
      volumes:
        {{- toYaml .Values.extraVolumes | nindent 10 }}
      {{- end }}
