# Default values for base-chart-hdc.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Common settings
nameOverride: ""
fullnameOverride: ""
replicaCount: 1

# Labels customization
labels:
  # Override default app.kubernetes.io labels
  app: ""          # Overrides app.kubernetes.io/name
  component: ""    # Additional label app.kubernetes.io/component
  partOf: ""       # Additional label app.kubernetes.io/part-of
  # Add any custom labels as needed
  custom: {}

# Image settings
image:
  repository: nginx # Should be overridden by child charts
  tag: "" # Should be overridden by child charts
  pullPolicy: IfNotPresent
  # Optional prefix name for the image tag
  tagPrefix: ""
  # Optional: additional command and args
  # command: []
  # args: []

# Application configuration environment variables
appConfig:
  env: "dev"
  config_center_enabled: false
  config_center_base_url: ""
  srv_namespace: ""

# Container settings
container:
  name: "my-container"
  # Define ports as a list for flexibility
  ports:
    - name: http
      containerPort: 8080
      protocol: TCP

# Service settings
service:
  type: ClusterIP
  # Define ports as a list for flexibility
  ports: []
    #- port: 80
    #  targetPort: base-chart-hdc-http
    #  name: http
  # Additional custom labels can be added to the service
  labels: {}

# Service account settings
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Pod settings
podAnnotations: {}
podSecurityContext: {}
securityContext: {}

# Ingress controller configuration
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# Resource settings
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Health check probes
readinessProbe: {}
  # httpGet:
  #   path: /health
  #   port: http
  # initialDelaySeconds: 30
  # periodSeconds: 10

livenessProbe: {}
  # httpGet:
  #   path: /health
  #   port: http
  # initialDelaySeconds: 30
  # periodSeconds: 10

# Init container settings
initContainers:
  enabled: false
  command: []
  args: []

# Autoscaling configuration
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Node selection settings
nodeSelector: {}
tolerations: []
affinity: {}

# Image pull secrets
imagePullSecrets: []
# - name: regcred

# Deployment annotations
deploymentAnnotations: {}

# Extension points for child charts
extraEnv: {}
extraEnvYaml: []
envSecrets: {}

# Volume mounts and volumes
extraVolumeMounts: []
extraVolumes: []

# Deployment update strategy
updateStrategy: {}

# Additional containers
additionalContainers: []
# - name: sidecar
#   image: "sidecar:latest"
#   imagePullPolicy: IfNotPresent
#   ports:
#     - name: metrics
#       containerPort: 9090
#       protocol: TCP
