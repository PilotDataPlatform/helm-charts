apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "download-service.fullname" . }}
  labels:
    {{- include "download-service.labels" . | nindent 4 }}
  {{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
    {{- if .Values.updateStrategy }}
  strategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "download-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "download-service.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.hostAliases }}
      hostAliases:
      - ip: {{ .Values.hostAliases.ip | quote }}
        hostnames:
        {{- range $value := .Values.hostAliases.hostnames }}
        - {{ $value | quote }}
        {{- end }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.command }}
          {{- with .Values.command }}
          command: 
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- if .Values.args }}
          {{- with .Values.args }}
          args: 
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          env:
          - name: port
            value: {{ .Values.appConfig.port | quote }}
          - name: CONFIG_CENTER_ENABLED
            value: {{ .Values.appConfig.config_center_enabled | quote }}
          - name: CONFIG_CENTER_BASE_URL
            value: {{ .Values.appConfig.config_center_base_url | quote }}
          - name: env
            value: {{ .Values.appConfig.env | quote }}
          - name: srv_namespace
            value: {{ .Values.appConfig.srv_namespace | quote }}
            # log levels
          - name: LOG_LEVEL_DEFAULT
            value: {{ .Values.appConfig.LOG_LEVEL_DEFAULT | quote}}
          - name: LOG_LEVEL_FILE
            value: {{ .Values.appConfig.LOG_LEVEL_FILE | quote}}
          - name: LOG_LEVEL_STDOUT
            value: {{ .Values.appConfig.LOG_LEVEL_STDOUT | quote}}
          - name: LOG_LEVEL_STDERR
            value: {{ .Values.appConfig.LOG_LEVEL_STDERR | quote }}
          - name: CORE_ZONE_LABEL
            value: "Core"
          - name: GREEN_ZONE_LABEL
            value: "Greenroom"
          - name: ROOT_PATH
            value: {{ .Values.appConfig.ROOT_PATH | quote }}
          - name: DOWNLOAD_TOKEN_EXPIRE_AT
            value: {{ .Values.appConfig.DOWNLOAD_TOKEN_EXPIRE_AT | quote }}
          #if tenant id is not set
{{- if not .Values.appConfig.tenant_id }}
          - name: APPROVAL_SERVICE
            value: "http://approval.utility:8000"
          - name: DATAOPS_SERVICE
            value: "http://dataops.utility:5063"
          - name: DATASET_SERVICE
            value: "http://dataset.utility:5081"
          - name: METADATA_SERVICE
            value: "http://metadata.utility:5066"
          - name: PROJECT_SERVICE
            value: "http://project.utility:5064"
          - name: KAFKA_URL
            value: "kafka.utility:9092"
          - name: KAFKA_DATASET_ACTIVITY_TOPIC
            value: "dataset.activity"
          - name: KAFKA_ITEM_ACTIVITY_TOPIC
            value: "metadata.items.activity"
{{- else }}
          - name: APPROVAL_SERVICE
            value: "http://approval.{{ .Values.appConfig.tenant_id }}-utility:8000"
          - name: DATAOPS_SERVICE
            value: "http://dataops.{{ .Values.appConfig.tenant_id }}-utility:5063"
          - name: DATASET_SERVICE
            value: "http://dataset.{{ .Values.appConfig.tenant_id }}-utility:5081"
          - name: METADATA_SERVICE
            value: "http://metadata.{{ .Values.appConfig.tenant_id }}-utility:5066"
          - name: PROJECT_SERVICE
            value: "http://project.{{ .Values.appConfig.tenant_id }}-utility:5064"
          - name: KAFKA_URL
            value: "shared-kafka.datastores-helmfile:9092"
          - name: KAFKA_DATASET_ACTIVITY_TOPIC
            value: "{{ .Values.appConfig.tenant_id }}.dataset.activity"
          - name: KAFKA_ITEM_ACTIVITY_TOPIC
            value: "{{ .Values.appConfig.tenant_id }}.metadata.items.activity"
{{- end}}
           # telemetry
          - name: OPEN_TELEMETRY_ENABLED
            value: {{ .Values.appConfig.OPEN_TELEMETRY_ENABLED | quote }}
          - name: OPEN_TELEMETRY_HOST
            value: {{ .Values.appConfig.OPEN_TELEMETRY_HOST | quote }}
          - name: OPEN_TELEMETRY_PORT
            value: {{ .Values.appConfig.OPEN_TELEMETRY_PORT | quote }}
          # redis
{{- if not .Values.appConfig.tenant_id }}
          - name: REDIS_HOST
            value: {{ .Values.appConfig.REDIS_HOST | quote }}
{{- else }}
          - name: REDIS_HOST
            value: "redis-master.{{ .Values.appConfig.tenant_id }}-redis"
{{- end }}
          - name: REDIS_PORT
            value: {{ .Values.appConfig.REDIS_PORT | quote }}
          - name: REDIS_DB
            value: {{ .Values.appConfig.REDIS_DB | quote }}
{{- if .Values.extraEnv }}
  {{- range $key, $value := .Values.extraEnv }}
          - name: {{ $key }}
            value: {{ $value | quote }}
  {{- end }}
{{- end }}
{{- with .Values.extraEnvYaml }}
          {{- toYaml . | nindent 10 }}
{{- end }}
          ports:
              - name: http
                containerPort: {{ .Values.container.port }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.extraVolumeMounts }}
          volumeMounts:
            {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.extraVolumes }}
      volumes:
        {{- toYaml .Values.extraVolumes | nindent 10 }}
      {{- end }}
