apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "guacamole.fullname" . }}
  labels:
    {{- include "guacd.labels" . | nindent 4 }}
  {{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.guacamole.replicaCount }}
  selector:
    matchLabels:
       {{- include "guacamole.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "guacamole.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: configure-db
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.dbinit.image.repository }}:{{ .Values.dbinit.image.tag | default .Chart.AppVersion}}"
          imagePullPolicy: {{ .Values.dbinit.image.pullPolicy }}
          envFrom:
            - secretRef:
                name: {{ include "guacamole.fullname" . }}
          volumeMounts:
            - name: initdb-guacamole
              mountPath: /etc/data/initdb_guacamole.sql
              subPath: initdb_guacamole.sql
          command: ["/bin/sh"]
          args:
            - -c
            - |
              export PGPASSWORD=$GLOBAL_POSTGRES_PASSWORD
              psql -h "{{ .Values.guacamole.postgresql.auth.hostname }}" -U  "{{ .Values.global.postgresql.auth.username }}" -p "{{ .Values.guacamole.postgresql.auth.port }}" -c "CREATE USER {{ .Values.guacamole.postgresql.auth.username }} WITH PASSWORD '$POSTGRES_PASSWORD';"
              psql -h "{{ .Values.guacamole.postgresql.auth.hostname }}" -U  "{{ .Values.global.postgresql.auth.username }}" -p "{{ .Values.guacamole.postgresql.auth.port }}" -c "CREATE DATABASE {{ .Values.guacamole.postgresql.auth.database }};"
              psql -h "{{ .Values.guacamole.postgresql.auth.hostname }}" -d "{{ .Values.guacamole.postgresql.auth.database }}" -U "{{ .Values.global.postgresql.auth.username }}" -p "{{ .Values.global.postgresql.port }}" -a -w -f /etc/data/initdb_guacamole.sql -v guac_user="{{ .Values.guacamole.postgresql.auth.username }}" || true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.guacamole.image.repository }}:{{ .Values.guacamole.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.guacamole.image.pullPolicy }}
          envFrom:
            - secretRef:
                name: {{ include "guacamole.fullname" . }}
          env:
            - name: GUACD_HOSTNAME
              value: "guacd"
            - name: GUACD_PORT
              value: "{{ .Values.guacd.port }}"
            - name: GUACAMOLE_HOME
              value: "/etc/guacamole"
            - name: POSTGRES_ABSOLUTE_MAX_CONNECTIONS
              value: "{{ .Values.guacamole.postgresql.absolute_maximum_connections }}"
            - name: POSTGRES_USER
              value: "{{ .Values.guacamole.postgresql.auth.username }}"
            - name: POSTGRES_DATABASE
              value: "{{ .Values.guacamole.postgresql.auth.database }}"
            - name: POSTGRES_HOSTNAME
              value: "{{ .Values.guacamole.postgresql.auth.hostname }}"
            - name: POSTGRES_PORT
              value: "{{ .Values.global.postgresql.port }}"
            - name: OPENID_AUTHORIZATION_ENDPOINT
              value: "https://iam.{{ .Values.global.env }}.pilot.indocresearch.org/auth/realms/pilot/protocol/openid-connect/auth"
            - name: OPENID_JWKS_ENDPOINT
              value: "https://iam.{{ .Values.global.env }}.pilot.indocresearch.org/auth/realms/pilot/protocol/openid-connect/certs"
            - name: OPENID_ISSUER
              value: "https://iam.{{ .Values.global.env }}.pilot.indocresearch.org/auth/realms/pilot"
            - name: OPENID_CLIENT_ID
              value: "workspace-{{ .Values.global.project_name }}-guacamole"
            - name: OPENID_REDIRECT_URI
              value: "https://{{ .Values.global.env }}.pilot.indocresearch.org/workbench/{{ .Values.global.project_name }}/guacamole/"
            - name: OPENID_USERNAME_CLAIM_TYPE
              value: "username"
            - name: OPENID_SCOPE
              value: "openid username email profile groups"
          volumeMounts:
            - name: guacamole-extensions-storage
              mountPath: /etc/guacamole/extensions
            - name: configurations
              mountPath: /etc/guacamole/
          ports:
            - name: http
              containerPort: {{ .Values.guacamole.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: initdb-guacamole
          configMap:
            name: guacamole-init-file
            items:
              - key: initdb_guacamole.sql
                path: initdb_guacamole.sql
        - name: guacamole-extensions-storage
          persistentVolumeClaim:
            claimName: guacamole-extensions
        - name: configurations
          configMap:
            name: guacamole-configuration

